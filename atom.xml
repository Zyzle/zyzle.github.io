<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
	<title>Zyzle.dev</title>
	<link href="https://zyzle.dev/atom.xml" rel="self" type="application/atom+xml"/>
  <link href="https://zyzle.dev"/>
	<generator uri="https://www.getzola.org/">Zola</generator>
	<updated>2022-05-21T00:00:00+00:00</updated>
	<id>https://zyzle.dev/atom.xml</id>
	<entry xml:lang="en">
		<title>Let&#x27;s write a blog - Part 3: Jekyll</title>
		<published>2022-05-21T00:00:00+00:00</published>
		<updated>2022-05-21T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/blog/jekyll/" type="text/html"/>
		<id>https://zyzle.dev/blog/jekyll/</id>
		<content type="html">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;Jekyll&lt;&#x2F;a&gt; is the oldest of the static site generators we&#x27;ll be looking at it&#x27;s 1.0 version appearing in 2013. It was originally designed to be centred around blogging but has grown into a more fully featured static site generator.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;
&lt;p&gt;The application is written in ruby and the sites and themes are build around gems. One additional benefit of Jekyll is it comes fully supported by GitHub which will be my preferred way of hosting the blog for now.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h2&gt;
&lt;p&gt;This is where the first hurdles with Jekyll come in to play. For one thing apparently you shouldn&#x27;t use the macOS system of Ruby for &lt;a href=&quot;https:&#x2F;&#x2F;www.moncefbelyamani.com&#x2F;why-you-shouldn-t-use-the-system-ruby-to-install-gems-on-a-mac&#x2F;&quot;&gt;various reasons&lt;&#x2F;a&gt; so we&#x27;re going to first have to install the &lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;postmodern&#x2F;chruby&quot;&gt;chruby&lt;&#x2F;a&gt; tool. I&#x27;m going to skip the exact steps I went through for this but you can follow the instructions on the &lt;a href=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;docs&#x2F;installation&#x2F;macos&#x2F;&quot;&gt;Jekyll site&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ gem install bundler jekyll
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As well as requiring a Ruby install Jekyll has quite a few gem dependencies making it one of the larger install footprints we&#x27;ll be looking at.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;site-setup&quot;&gt;Site setup&lt;&#x2F;h2&gt;
&lt;p&gt;First we make a new directory for our blog and run the command&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ bundle init
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This gives us an empty &lt;code&gt;Gemfile&lt;&#x2F;code&gt; which we&#x27;ll add our dependencies to:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;rb&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-rb &quot;&gt;&lt;code class=&quot;language-rb&quot; data-lang=&quot;rb&quot;&gt;&lt;span&gt;source &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;rubygems.org&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;gem &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;jekyll&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# this is required running ruby versions &amp;gt;3
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;gem &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;webrick&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Once these dependencies are in the gemfile we can use the bundle tool to install them with&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ bundle
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we have our dependencies installed lets go ahead and create some basic directory structure for the site:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282c34;color:#abb2bf;&quot;&gt;&lt;code&gt;&lt;span&gt;jekyllblog&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- _includes&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- _layouts&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- _posts&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- assets&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- _config.yml
&lt;&#x2F;span&gt;&lt;span&gt;  +-- Gemfile
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;These directory names are fairly self explanatory, &lt;code&gt;_includes&lt;&#x2F;code&gt; will hold our template partials that can be included in other files, &lt;code&gt;_layouts&lt;&#x2F;code&gt; will contain our main template files, &lt;code&gt;_posts&lt;&#x2F;code&gt; will be where we put our blog page markdown files, and &lt;code&gt;assets&lt;&#x2F;code&gt; contains site assets.&lt;&#x2F;p&gt;
&lt;p&gt;The &lt;code&gt;_config.yml&lt;&#x2F;code&gt; is our Jekyll config file, we wont be adding much to this for the moment, just the sites title:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;yaml&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-yaml &quot;&gt;&lt;code class=&quot;language-yaml&quot; data-lang=&quot;yaml&quot;&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;My Blog
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Now we have the basics we can run Jekyll in watch mode to serve our site for us while we develop&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ jekyll serve&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; --watch
&lt;&#x2F;span&gt;&lt;span&gt;Configuration file: &#x2F;Users&#x2F;jekyllblog&#x2F;_config.yml
&lt;&#x2F;span&gt;&lt;span&gt;            Source: &#x2F;Users&#x2F;jekyllblog
&lt;&#x2F;span&gt;&lt;span&gt;       Destination: &#x2F;Users&#x2F;jekyllblog&#x2F;_site
&lt;&#x2F;span&gt;&lt;span&gt; Incremental build: disabled. Enable with&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; --incremental
&lt;&#x2F;span&gt;&lt;span&gt;      Generating...
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;done&lt;&#x2F;span&gt;&lt;span&gt; in 0.02 seconds.
&lt;&#x2F;span&gt;&lt;span&gt; Auto-regeneration: enabled for &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;#39;&#x2F;Users&#x2F;jekyllblog&amp;#39;
&lt;&#x2F;span&gt;&lt;span&gt;    Server address: http:&#x2F;&#x2F;127.0.0.1:4000
&lt;&#x2F;span&gt;&lt;span&gt;  Server running... press ctrl-c to stop.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If we navigate to &lt;code&gt;http:&#x2F;&#x2F;127.0.0.1:4000&lt;&#x2F;code&gt; right now all we&#x27;ll see is the output directory listing from webrick so let&#x27;s go ahead and add some templates and content.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;templating-101&quot;&gt;Templating 101&lt;&#x2F;h2&gt;
&lt;p&gt;Let&#x27;s go through the templates for our site. First the base template which we&#x27;ll call &lt;code&gt;default.html&lt;&#x2F;code&gt; which we&#x27;ll place in our &lt;code&gt;_layouts&lt;&#x2F;code&gt; its content will be as follows:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;utf-8&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{page.title}} | {{ site.title }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{ site.title }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      {% include navigation.html %}
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{ content }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;If you read the &lt;a href=&quot;https:&#x2F;&#x2F;zyzle.dev&#x2F;blog&#x2F;zola&#x2F;#templating-101&quot;&gt;previous entry&lt;&#x2F;a&gt; in our series this base template should fairly familiar, Jekyll&#x27;s templating engine &lt;a href=&quot;https:&#x2F;&#x2F;shopify.github.io&#x2F;liquid&#x2F;&quot;&gt;Liquid&lt;&#x2F;a&gt; (originally developed by &lt;a href=&quot;https:&#x2F;&#x2F;www.shopify.com&#x2F;&quot;&gt;Shopify&lt;&#x2F;a&gt;) shares a lot of syntax with &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.app&#x2F;&quot;&gt;Tera&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Unlike our Zola blog the Jekyll one does not define named content blocks the &lt;code&gt;{{content}}&lt;&#x2F;code&gt; template entry will automatically pick up the content either from a markdown page or from a sub-template that will extend this one. &lt;code&gt;{{site.title}}&lt;&#x2F;code&gt; simply comes from our &lt;code&gt;_config.yml&lt;&#x2F;code&gt; file.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ve separated our header navigation into an include in &lt;code&gt;_includes&#x2F;navigation.html&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{% link index.html %}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Home&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{% link blog.html %}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{% link about.md %}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we use the Jekyll &lt;code&gt;link&lt;&#x2F;code&gt; command to construct a link to the specific pages in the root of the project, as we can see this link can either be to an explicit HTML file or a Markdown file that will be processed by Jekyll during its build.&lt;&#x2F;p&gt;
&lt;p&gt;So lets take a look at the &lt;code&gt;index.html&lt;&#x2F;code&gt; file that we&#x27;ve created:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;layout: default
&lt;&#x2F;span&gt;&lt;span&gt;title: Home
&lt;&#x2F;span&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;This is the blog homepage&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Not much in the way of html in here, this is really just a front-matter telling Jekyll which layout template to plug this content in to and a title for the page.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;our-list-entries-pages&quot;&gt;Our List&#x2F;Entries pages&lt;&#x2F;h2&gt;
&lt;p&gt;Our &lt;code&gt;blog.html&lt;&#x2F;code&gt; file will contain a title and give us a basic unordered list of the current blog entries on the site. Jekyll gives us a helpful &lt;code&gt;site.posts&lt;&#x2F;code&gt; variable that we can iterate over for this purpose:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;layout: default
&lt;&#x2F;span&gt;&lt;span&gt;title: Blog
&lt;&#x2F;span&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;List of blog posts&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {% for post in site.posts %}
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{{ post.url }}&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{ post.title }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {% endfor %}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Again we&#x27;re using the default template here and injecting this content directly. So far so simple.&lt;&#x2F;p&gt;
&lt;p&gt;The blog entry page template &lt;code&gt;blog-page.html&lt;&#x2F;code&gt; contains the following:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;layout: default
&lt;&#x2F;span&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;title&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	{{page.title}}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;class&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;subtitle&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{page.date}}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;strong&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{{ content }}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;All we need to do here is pull out the page title and date from the &lt;code&gt;page&lt;&#x2F;code&gt; object Jekyll gives us and wrap these in some tags to be displayed at the top of the content block. Notice this templates front-matter where we have a &lt;code&gt;layout&lt;&#x2F;code&gt; property defined, this tells Jekyll to forward the results of merging this template with its markdown file into the &lt;code&gt;content&lt;&#x2F;code&gt; block of the &lt;code&gt;default.html&lt;&#x2F;code&gt; template defined above.&lt;&#x2F;p&gt;
&lt;p&gt;The final part of these blog posts is the markdown itself, these files are placed in the &lt;code&gt;_posts&lt;&#x2F;code&gt; folder and their names are prefixed by the post release date e.g &lt;code&gt;2022-05-20-post-1.md&lt;&#x2F;code&gt; in these files we define a front-matter with template to use and title, then the content that makes up our blog post:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;layout: blog-page
&lt;&#x2F;span&gt;&lt;span&gt;title: My first post
&lt;&#x2F;span&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;This is the first blog post
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h2 id=&quot;about-page&quot;&gt;About Page&lt;&#x2F;h2&gt;
&lt;p&gt;The about page we will be using exists as a markdown file at the root of the project &lt;code&gt;about.md&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;markdown&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-markdown &quot;&gt;&lt;code class=&quot;language-markdown&quot; data-lang=&quot;markdown&quot;&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;layout: page
&lt;&#x2F;span&gt;&lt;span&gt;title: About
&lt;&#x2F;span&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;This is the blog about page
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;It&#x27;s template &lt;code&gt;page.html&lt;&#x2F;code&gt;  looks like this:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;layout: default
&lt;&#x2F;span&gt;&lt;span&gt;---
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;article&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{page.title}}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {{ content }}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;article&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Again we have a partial HTML file with some basic tags that wrap the markdown content and extract the page title into a header. As with the previous template this is then passed up to the &lt;code&gt;default.html&lt;&#x2F;code&gt; template and inserted into it&#x27;s &lt;code&gt;content&lt;&#x2F;code&gt; section.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;build-and-deploy&quot;&gt;Build and deploy&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ jekyll build
&lt;&#x2F;span&gt;&lt;span&gt;Configuration file: &#x2F;Users&#x2F;jekyllblog&#x2F;_config.yml
&lt;&#x2F;span&gt;&lt;span&gt;            Source: &#x2F;Users&#x2F;jekyllblog
&lt;&#x2F;span&gt;&lt;span&gt;       Destination: &#x2F;Users&#x2F;jekyllblog&#x2F;_site
&lt;&#x2F;span&gt;&lt;span&gt; Incremental build: disabled. Enable with&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; --incremental
&lt;&#x2F;span&gt;&lt;span&gt;      Generating... 
&lt;&#x2F;span&gt;&lt;span&gt;                    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;done&lt;&#x2F;span&gt;&lt;span&gt; in 0.02 seconds.
&lt;&#x2F;span&gt;&lt;span&gt; Auto-regeneration: disabled. Use&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; --watch&lt;&#x2F;span&gt;&lt;span&gt; to enable.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The build process is quick and generates the static HTML into a directory in our blog root &lt;code&gt;_site&lt;&#x2F;code&gt;. The directory structure &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282c34;color:#abb2bf;&quot;&gt;&lt;code&gt;&lt;span&gt;_site&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- 2002&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |    +-- 05&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |         |-- 06&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |         |    +-- post-1.html
&lt;&#x2F;span&gt;&lt;span&gt;  |         +-- 07&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |              +-- post-2.html
&lt;&#x2F;span&gt;&lt;span&gt;  |-- about.html
&lt;&#x2F;span&gt;&lt;span&gt;  |-- blog.html
&lt;&#x2F;span&gt;&lt;span&gt;  +-- index.html
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As you can see Jekyll uses post dates to create a URL structure for the generated website, the compiled about page looks almost identical to our &lt;a href=&quot;https:&#x2F;&#x2F;zyzle.dev&#x2F;blog&#x2F;zola&#x2F;#building-for-deployment&quot;&gt;previous example&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;utf-8&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About | My Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;My Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Home&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;&#x2F;blog.html&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;&#x2F;about.html&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;article&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;This is the blog about page&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;article&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Unlike our previous example Jekyll doesn&#x27;t provide us with any extras out of the box although it does provide a wide catalogue of &lt;a href=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;docs&#x2F;plugins&#x2F;&quot;&gt;plugins&lt;&#x2F;a&gt; that can be used with the site.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Jekyll is easy to get up and running with all be it if you have previous knowledge of managing a Ruby installation on your system, it&#x27;s templating system is straightforward and the Liquid template engine is well documented. Jekyll&#x27;s built URL structure is a little archaic and actually goes against what many SEO guides &lt;a href=&quot;https:&#x2F;&#x2F;www.sistrix.com&#x2F;blog&#x2F;want-slowly-kill-content-google-simply-use-directory-structure-dates&#x2F;&quot;&gt;recommend&lt;&#x2F;a&gt;. The constructed site is smaller than the one generated by Zola, mostly because of the omitted extra files like the 404 page and sitemap, and comes in at around 20Kb.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Let&#x27;s write a blog - Part 2: Zola</title>
		<published>2022-04-16T00:00:00+00:00</published>
		<updated>2022-04-16T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/blog/zola/" type="text/html"/>
		<id>https://zyzle.dev/blog/zola/</id>
		<content type="html">&lt;p&gt;Zola (formally Gutenberg) is a SSG written in Rust. Zola has it&#x27;s own templating engine &lt;a href=&quot;https:&#x2F;&#x2F;tera.netlify.app&#x2F;&quot;&gt;Tera&lt;&#x2F;a&gt; created by the same author and follows a similar design in it&#x27;s templating to Jinja 2. Distributed as a single binary Zola has a much smaller footprint than the other SSGs we&#x27;ll be looking at, it also promises to be fast (comparable to Hugo) and runs from a simple augmented markdown including shortcodes and custom internal linking.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;&#x2F;h2&gt;
&lt;p&gt;Zola comes as a single binary distributable, on MacOS the simplest way to install it is with homebrew.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ brew install zola
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Zola is also available on MacPorts, Chocolatey, Scoop, and various linux package structures. With no external dependencies Zola is probably the simplest of the 3 tools we&#x27;re looking at.&lt;&#x2F;p&gt;
&lt;p&gt;The version we&#x27;ll be using is the current stable 0.15.3 (23rd Jan 2022) at the time of writing, with a total size of ~19mb it also has one of the smallest install footprints. &lt;&#x2F;p&gt;
&lt;h2 id=&quot;site-setup&quot;&gt;Site setup&lt;&#x2F;h2&gt;
&lt;p&gt;Zola has a simple setup wizard that runs through some basic configuration options&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ zola init zolablog
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Wizard process asks (defaults shown): &lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282c34;color:#abb2bf;&quot;&gt;&lt;code&gt;&lt;span&gt;* site url
&lt;&#x2F;span&gt;&lt;span&gt;* Sass compilation (Y&#x2F;n)
&lt;&#x2F;span&gt;&lt;span&gt;* syntax highlighting (y&#x2F;N)
&lt;&#x2F;span&gt;&lt;span&gt;* search index (y&#x2F;N)
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;created site has following structure:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282c34;color:#abb2bf;&quot;&gt;&lt;code&gt;&lt;span&gt;zolablog&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- content&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- sass&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- static&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- templates&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- themes&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  +-- config.toml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;A few empty directories and a &lt;code&gt;config.toml&lt;&#x2F;code&gt; with the minimal configuration I selected in the site setup wizard. The full list of Zola configuration options can be found &lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;documentation&#x2F;getting-started&#x2F;configuration&#x2F;&quot;&gt;in the zola documentation&lt;&#x2F;a&gt;. The config will looks something like the following:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# The URL the site will be built for
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;base_url &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;example.com&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;My Blog&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# Whether to automatically compile all Sass files in the sass directory
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;compile_sass &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# Whether to build a search index to be used later on by a JavaScript library
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;build_search_index &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;false
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[markdown]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# Whether to do syntax highlighting
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# Theme can be customised by setting the `highlight_theme` variable to a theme supported by Zola
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;highlight_code &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;true
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;[extra]
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;# Put all your custom variables here
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Let&#x27;s start the development server with the following&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ zola serve
&lt;&#x2F;span&gt;&lt;span&gt;Building site...
&lt;&#x2F;span&gt;&lt;span&gt;Checking all internal links with anchors.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Successfully checked 0 internal link(s) with anchors.
&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Creating 0 pages (0 orphan), 0 sections, and processing 0 images
&lt;&#x2F;span&gt;&lt;span&gt;Done in 56ms.
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Web server is available at http:&#x2F;&#x2F;127.0.0.1:1111
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;Listening for changes in &#x2F;Users&#x2F;zolablog{&#x2F;Users&#x2F;zolablog&#x2F;config.toml, content, sass, static, templates}
&lt;&#x2F;span&gt;&lt;span&gt;Press Ctrl+C to stop
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Zola automatically runs in watch mode so any changes you make will be built and served.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;templating-101&quot;&gt;Templating 101&lt;&#x2F;h2&gt;
&lt;p&gt;I&#x27;m not going to work off of a base template for Zola as everything can be built simply from scratch.&lt;&#x2F;p&gt;
&lt;p&gt;We&#x27;ll start with a &lt;code&gt;base.html&lt;&#x2F;code&gt; file that all our other templates will inherit from:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{% block title %}{{ config.title }}{% endblock title %}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;{{ config.title }}&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        {% include &amp;quot;navigation.html&amp;quot; %}
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      {% block content %}{% endblock %}
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This is a fairly standard html5 template using some semantic html tags. Tera has 3 types of expression delimiters:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{&lt;&#x2F;code&gt; and &lt;code&gt;}}&lt;&#x2F;code&gt; for expressions&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;{%&lt;&#x2F;code&gt; and &lt;code&gt;%}&lt;&#x2F;code&gt; for statements&lt;&#x2F;li&gt;
&lt;li&gt;&lt;code&gt;{#&lt;&#x2F;code&gt; and &lt;code&gt;#}&lt;&#x2F;code&gt; for comments&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;In the above we pick out the site title from the configuration file with &lt;code&gt;config.title&lt;&#x2F;code&gt; and wrap this with a &lt;code&gt;title&lt;&#x2F;code&gt; named block which we can override later. We also define a block called &lt;code&gt;content&lt;&#x2F;code&gt; inside the sites &lt;code&gt;&amp;lt;main&amp;gt;&lt;&#x2F;code&gt; tags that we&#x27;ll be substituting with out page content in later templates. For now lets have a look at the &lt;code&gt;navigation.html&lt;&#x2F;code&gt; template that will be included in the the &lt;code&gt;header&lt;&#x2F;code&gt; tag.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{{ get_url(path=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;_index.md&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;) }}&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Home&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{{ get_url(path=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;blog&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;_index.md&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;) }}&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;{{ get_url(path=&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;@&lt;&#x2F;span&gt;&lt;span&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;about.md&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;) }}&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The &lt;code&gt;get_url&lt;&#x2F;code&gt; function gives the permalink for a given path the &lt;code&gt;@&#x2F;&lt;&#x2F;code&gt; will be treated as an internal link to the root of the Zola &lt;code&gt;content&lt;&#x2F;code&gt; directory. Lets have a look at the first entry here, the &lt;code&gt;_index.md&lt;&#x2F;code&gt;&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;+++&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;page_template &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;page.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;+++&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This simple markdown frontmatter does is tell zola that any pages contained in this directory should be rendered with the &lt;code&gt;page.html&lt;&#x2F;code&gt; template, we&#x27;ll come back to the contents of this later. &lt;&#x2F;p&gt;
&lt;p&gt;Zola will also render the &lt;code&gt;index.html&lt;&#x2F;code&gt; file found in the templates directory at the site root&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;j2&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-j2 &quot;&gt;&lt;code class=&quot;language-j2&quot; data-lang=&quot;j2&quot;&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;base.html&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;%}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;title %}Home | {{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;() }}{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;title %}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;p&amp;gt;This is the blog homepage&amp;lt;&#x2F;p&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Here we are again extending the sites &lt;code&gt;base.html&lt;&#x2F;code&gt; and overriding the named blocks, first our &lt;code&gt;title&lt;&#x2F;code&gt; block, this has the interesting &lt;code&gt;super()&lt;&#x2F;code&gt; method which places the blocks existing content defined in the base template at the calling location allowing us to keep the sites name without having to redefine it in every template.&lt;&#x2F;p&gt;
&lt;p&gt;We just add a simple static paragraph of text into the &lt;code&gt;content&lt;&#x2F;code&gt; block of the template.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;pages&quot;&gt;Pages&lt;&#x2F;h2&gt;
&lt;p&gt;Zola considers directories inside the &lt;code&gt;content&lt;&#x2F;code&gt; directory as sections, we&#x27;ll create a new dir and file &lt;code&gt;&#x2F;blog&#x2F;_index.md&lt;&#x2F;code&gt; and add some toml frontmatter that will tell Zola how to render this sections root page and any sub-pages:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;toml&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-toml &quot;&gt;&lt;code class=&quot;language-toml&quot; data-lang=&quot;toml&quot;&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;+++&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;List of blog posts&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;sort_by &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;date&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;template &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;blog.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;page_template &lt;&#x2F;span&gt;&lt;span&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;blog-page.html&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;background-color:#f8f8f0;color:#c678dd;&quot;&gt;+++&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;This tells Zola, render the &lt;code&gt;blog&#x2F;&lt;&#x2F;code&gt; index url using the &lt;code&gt;blog.html&lt;&#x2F;code&gt; template and apply the &lt;code&gt;blog-page.html&lt;&#x2F;code&gt; template to any markdown files in this section folder, the &lt;code&gt;sort_by&lt;&#x2F;code&gt; directive also tells Zola to sort the articles in this section by date, default newest first. &lt;&#x2F;p&gt;
&lt;h3 id=&quot;blog-list&quot;&gt;Blog list&lt;&#x2F;h3&gt;
&lt;p&gt;Lets look at the index page template &lt;code&gt;blog.html&lt;&#x2F;code&gt; first:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;j2&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-j2 &quot;&gt;&lt;code class=&quot;language-j2&quot; data-lang=&quot;j2&quot;&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;base.html&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;%}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;title %}{{ section.title }} | {{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;() }}{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;title %}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;h1 class=&amp;quot;title&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {{ section.title }}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;h1&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;ul&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;for &lt;&#x2F;span&gt;&lt;span&gt;page &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;in &lt;&#x2F;span&gt;&lt;span&gt;section.pages %}
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{ page.permalink | safe }}&amp;quot;&amp;gt;{{ page.title }}&amp;lt;&#x2F;a&amp;gt;&amp;lt;&#x2F;li&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endfor &lt;&#x2F;span&gt;&lt;span&gt;%}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;ul&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;As we&#x27;ve seen before we start by extending the &lt;code&gt;base.html&lt;&#x2F;code&gt; template and override the title section using &lt;code&gt;super&lt;&#x2F;code&gt; again to keep our site title, then we insert into our &lt;code&gt;content&lt;&#x2F;code&gt; block. We use &lt;code&gt;section.title&lt;&#x2F;code&gt; to pull out the title we defined in the front matter in &lt;code&gt;_index.md&lt;&#x2F;code&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;Now we get on to showing the blog list. Zola offers us the &lt;code&gt;section.pages&lt;&#x2F;code&gt; variable that gives us a sorted list of page objects representing pages in our section that we can iterate over and provide links to using their &lt;code&gt;permalink&lt;&#x2F;code&gt; and &lt;code&gt;title&lt;&#x2F;code&gt; variables.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;blog-page&quot;&gt;Blog Page&lt;&#x2F;h3&gt;
&lt;pre data-lang=&quot;j2&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-j2 &quot;&gt;&lt;code class=&quot;language-j2&quot; data-lang=&quot;j2&quot;&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;base.html&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;%}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;h1 class=&amp;quot;title&amp;quot;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;	{{ page.title }}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;h1&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;p class=&amp;quot;subtitle&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;{{ page.date }}&amp;lt;&#x2F;strong&amp;gt;&amp;lt;&#x2F;p&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{{ page.content | safe }}
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There&#x27;s not much in this template, again we&#x27;re extending the &lt;code&gt;base.html&lt;&#x2F;code&gt; file and inserting our content into the named block. We&#x27;ll also apply the Zola &lt;code&gt;safe&lt;&#x2F;code&gt; filter to the content because no html escaping is required for the content generated from the markdown by Zola.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;about&quot;&gt;About&lt;&#x2F;h3&gt;
&lt;p&gt;Our final template is the top level &lt;code&gt;page.html&lt;&#x2F;code&gt; we use to render the &lt;code&gt;about.md&lt;&#x2F;code&gt; about page content.&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;j2&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-j2 &quot;&gt;&lt;code class=&quot;language-j2&quot; data-lang=&quot;j2&quot;&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;extends &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;base.html&amp;quot; &lt;&#x2F;span&gt;&lt;span&gt;%}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;title%}{{ page.title }} | {{ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;super&lt;&#x2F;span&gt;&lt;span&gt;() }}{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;title %}
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;block &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;article&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;header&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;h1&amp;gt;{{ page.title }}&amp;lt;&#x2F;h1&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;header&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  {{ page.content | safe }}
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;article&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;{% &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;endblock &lt;&#x2F;span&gt;&lt;span&gt;content %}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There&#x27;s nothing here we haven&#x27;t looked at already, it&#x27;s just a cut down version of the blog page template.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;building-for-deployment&quot;&gt;Building for deployment&lt;&#x2F;h2&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;$ zola build
&lt;&#x2F;span&gt;&lt;span&gt;Building site...
&lt;&#x2F;span&gt;&lt;span&gt;Checking all internal links with anchors.
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Successfully checked 0 internal link(s) with anchors.
&lt;&#x2F;span&gt;&lt;span&gt;-&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;gt;&lt;&#x2F;span&gt;&lt;span&gt; Creating 3 pages (0 orphan) and 1 sections
&lt;&#x2F;span&gt;&lt;span&gt;Done in 13ms.
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The build process is simple and fast, by default outputs the site to the &lt;code&gt;public&lt;&#x2F;code&gt; directory. The output looks like the following:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282c34;color:#abb2bf;&quot;&gt;&lt;code&gt;&lt;span&gt;public&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |-- about&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |    +-- index.html
&lt;&#x2F;span&gt;&lt;span&gt;  |-- blog&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |    |-- first&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |    |    +-- index.html
&lt;&#x2F;span&gt;&lt;span&gt;  |    |-- second&#x2F;
&lt;&#x2F;span&gt;&lt;span&gt;  |    |    +-- index.html
&lt;&#x2F;span&gt;&lt;span&gt;  |    +-- index.html
&lt;&#x2F;span&gt;&lt;span&gt;  |-- 404.html
&lt;&#x2F;span&gt;&lt;span&gt;  |-- index.html
&lt;&#x2F;span&gt;&lt;span&gt;  |-- robots.txt
&lt;&#x2F;span&gt;&lt;span&gt;  +-- sitemap.xml
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;So our pages have been placed into individual HTML files using the templates we defined in the previous steps as an example here&#x27;s what the about page looks like compiled:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;!&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;DOCTYPE &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;lang&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;en&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;meta &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;charset&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;utf-8&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About | My Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;head&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;My Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;example.com&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Home&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;example.com&#x2F;blog&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;Blog&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;href&lt;&#x2F;span&gt;&lt;span&gt;=&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;https:&#x2F;&#x2F;example.com&#x2F;about&#x2F;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;a&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;li&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;ul&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;nav&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;article&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;          &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;About&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;header&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;This is the blog about page&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;p&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;      &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;article&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;main&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;body&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;We haven&#x27;t defined a template for a 404 page so Zola generates us a default one:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;html&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-html &quot;&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span&gt;&amp;lt;!doctype html&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;404 Not Found&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;title&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;span&gt;&amp;lt;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;404 Not Found&amp;lt;&#x2F;&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;h1&lt;&#x2F;span&gt;&lt;span&gt;&amp;gt;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;There&#x27;s also a basic &lt;code&gt;robots.txt&lt;&#x2F;code&gt; which points to our auto-generated &lt;code&gt;sitemap.xml&lt;&#x2F;code&gt; and if we had chosen it when we did the setup wizard we would have a JS search index file as well as a copy of &lt;a href=&quot;http:&#x2F;&#x2F;elasticlunr.com&#x2F;&quot;&gt;Elasticlunr&lt;&#x2F;a&gt; that can be hooked up to provide search functionality to our site. These are all extra features generated that I may take a deeper dive into later on but for now we&#x27;re done with the basic setup.&lt;&#x2F;p&gt;
&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;&#x2F;h2&gt;
&lt;p&gt;Zola was easy to get up and running with, the templating engine is simple and seems well documented. Zola provides a lot of good integrations for more advanced features such as search and site feeds we&#x27;ll look at in later sections. The final built site for our Zola example comes in at 32Kb.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Let&#x27;s write a blog - Part 1: Intro</title>
		<published>2022-04-09T00:00:00+00:00</published>
		<updated>2022-04-09T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/blog/intro/" type="text/html"/>
		<id>https://zyzle.dev/blog/intro/</id>
		<content type="html">&lt;p&gt;I&#x27;ve been wanting to get back into blogging for some time but have no idea what to write about to start me off, so why not write about choosing a blog tool and it&#x27;s setup. We&#x27;re going to go through some of the tools I&#x27;ve considered and the reasons behind my final choice as well as the process of creating a template and deploying the blog.&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h2 id=&quot;why-static-site&quot;&gt;Why static site?&lt;&#x2F;h2&gt;
&lt;p&gt;For a couple of reasons I&#x27;ve chosen to look at static site generators for this task. Firstly while I wan&#x27;t to create, style, and release my content as simply as possible I want to be in control of it. With the blogging platforms available today I don&#x27;t really find I get this. &lt;&#x2F;p&gt;
&lt;p&gt;Another big plus for me with the static site generators is I can keep all of the content in git in simple text files (usually markdown). The benefit if this to me is it allows my content to be stored in a version control system, I can look back through the history of drafts to see how things have progressed or even revert to older versions if I go off in a direction I later want to revise. &lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ve always been a fan of reducing page bloat as much as possible, these days even simple articles are bogged down with so much unnecessary scripts, includes, and poorly optimised assets that page sizes are out of control. I chose at random a reasonably sized Medium blog post of around 1300 words, this clocked in at 4.4Mb! The actual readable text content of the page consisting of only 8Kb of this total, so yeah &amp;lt;0.2%  of the page is actual content.&lt;&#x2F;p&gt;
&lt;blockquote&gt;
&lt;p&gt;Maciej Ceglowski has a great talk about this, the text of which can be found &lt;a href=&quot;https:&#x2F;&#x2F;idlewords.com&#x2F;talks&#x2F;website_obesity.htm&quot;&gt;here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;p&gt;From what I can see all of the most common blogging platforms these days share this issue with Medium and I don&#x27;t really want to have to hand-crank every page of my blog from scratch so the obvious solution seems to be a static site generator.&lt;&#x2F;p&gt;
&lt;p&gt;These have become popular with content creators in recent years because they allow you to keep your content blog entries, pages, sections etc. in a set of simple markdown files which can then be processed by the engine into a set of pre-defined html templates creating a more complete looking web experience for the end user. &lt;&#x2F;p&gt;
&lt;p&gt;There are many of these tools available currently but we&#x27;ll be focusing on 3 for the purposes of this blog, basically because I don&#x27;t want to have to learn more than 3 tools and re-implementing the site more than that.&lt;&#x2F;p&gt;
&lt;p&gt;The three tools I&#x27;ve chosen to look at are:&lt;&#x2F;p&gt;
&lt;h3 id=&quot;hugo&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;gohugo.io&#x2F;&quot;&gt;Hugo&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;One of the most popular static site generators, more generic site template engine than the other two we&#x27;ll be looking at. Claims to be one of the fastest static site generators around. Written in Go and uses Go&#x27;s &lt;code&gt;html&#x2F;template&lt;&#x2F;code&gt; and &lt;code&gt;text&#x2F;template&lt;&#x2F;code&gt; libraries for its templating.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;jekyll&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;jekyllrb.com&#x2F;&quot;&gt;Jekyll&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;One of the older static site generators and the first (only?) one to be integrated into github pages. Built in Ruby and does appear to require some Ruby knowledge to use.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;zola&quot;&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.getzola.org&#x2F;&quot;&gt;Zola&lt;&#x2F;a&gt;&lt;&#x2F;h3&gt;
&lt;p&gt;The newest of the three we&#x27;ll be looking at written in Rust and using a custom template engine similar to Jinja. Has a strong opinion on how content should be structured but has good freedom in it&#x27;s templates.&lt;&#x2F;p&gt;
&lt;p&gt;The plan is to implement the new blog, or at least a very small subset of it in each of these 3 tools  looking at things like: &lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;simplicity of setup&lt;&#x2F;li&gt;
&lt;li&gt;ease of use&lt;&#x2F;li&gt;
&lt;li&gt;flexibility&lt;&#x2F;li&gt;
&lt;li&gt;build&#x2F;deploy pipeline&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;what-i-m-looking-to-achieve&quot;&gt;What I&#x27;m looking to achieve&lt;&#x2F;h2&gt;
&lt;p&gt;Looking to build a new home for the blog I thought up a few basic feature requirements:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;requirements:
&lt;ul&gt;
&lt;li&gt;ease of adding blog entries&lt;&#x2F;li&gt;
&lt;li&gt;list by date published&lt;&#x2F;li&gt;
&lt;li&gt;permalinking&lt;&#x2F;li&gt;
&lt;li&gt;ability to add custom template&lt;&#x2F;li&gt;
&lt;li&gt;syntax highlighting for code blocks&lt;&#x2F;li&gt;
&lt;li&gt;styled figures&#x2F;quotes&#x2F;callout sections&lt;&#x2F;li&gt;
&lt;li&gt;page&#x2F;deep links&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;li&gt;nice to have&#x27;s:
&lt;ul&gt;
&lt;li&gt;no bespoke markdown&lt;&#x2F;li&gt;
&lt;li&gt;simple site structure&lt;&#x2F;li&gt;
&lt;li&gt;taxonomies support&lt;&#x2F;li&gt;
&lt;li&gt;ability to draft entries&lt;&#x2F;li&gt;
&lt;li&gt;template that can be reused&lt;&#x2F;li&gt;
&lt;li&gt;integration with GH-pages deploy&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;For the first part of this series I&#x27;ll create the same simple site template and basic page set in each of the three static site generators. I&#x27;m going to start with a simple homepage showing site title, a navigations section linking to homepage and an about page, a list of two blog entries showing title a summary of the page content and a link to continue reading. I&#x27;ll also need another two templates, one for the free-form About page and one for our blog posts. &lt;&#x2F;p&gt;
&lt;p&gt;The basic sites first iteration should look something like the following:&lt;&#x2F;p&gt;
&lt;p&gt;&lt;figure&gt;
    
    
        
    
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;zyzle.dev&amp;#x2F;processed_images&amp;#x2F;6199e33863e7941000.webp&quot; alt=&quot;the basic homepage layout&quot; &#x2F;&gt;
    &lt;figcaption&gt;The homepage&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;figure&gt;
    
    
        
    
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;zyzle.dev&amp;#x2F;processed_images&amp;#x2F;e43d982bff8ca84600.webp&quot; alt=&quot;a simple about page&quot; &#x2F;&gt;
    &lt;figcaption&gt;An about page&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;figure&gt;
    
    
        
    
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;zyzle.dev&amp;#x2F;processed_images&amp;#x2F;f350446c18931f1900.webp&quot; alt=&quot;the blog list page&quot; &#x2F;&gt;
    &lt;figcaption&gt;The blog list page sorted by date&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;
&lt;figure&gt;
    
    
        
    
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;zyzle.dev&amp;#x2F;processed_images&amp;#x2F;c702f2f65fd1d7d200.webp&quot; alt=&quot;a basic post page&quot; &#x2F;&gt;
    &lt;figcaption&gt;A basic post page&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ll also try and keep parity between the HTML generated by each &lt;&#x2F;p&gt;
&lt;p&gt;By the time you read this I&#x27;ll have a decision made on which tool to use (spoiler it&#x27;s Zola), in the coming posts I&#x27;ll go through what I&#x27;ve found evaluation the 3 of these and hopefully my decision will become clear.&lt;&#x2F;p&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>CSS material box shadow</title>
		<published>2022-04-01T00:00:00+00:00</published>
		<updated>2022-04-01T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/snippets/css-material-shadow/" type="text/html"/>
		<id>https://zyzle.dev/snippets/css-material-shadow/</id>
		<content type="html">&lt;p&gt;Box shadow similar to the one from the material design spec&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;css&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-css &quot;&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;.shadow &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;  box-shadow: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;5&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;rgba&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;14&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;10&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;rgba&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;12&lt;&#x2F;span&gt;&lt;span&gt;),
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 2&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;-1&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;px &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;rgba&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;, &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;4&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>File extension regex (js example)</title>
		<published>2022-04-01T00:00:00+00:00</published>
		<updated>2022-04-01T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/snippets/file-extension-regex/" type="text/html"/>
		<id>https://zyzle.dev/snippets/file-extension-regex/</id>
		<content type="html">&lt;p&gt;Simple regex for determining file extension&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;re &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&#x2F;(?:&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;\.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;^&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;.]&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;))&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;?$&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&#x2F;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;re&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;file.name.with.dots.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;];   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;&#x2F; &amp;quot;txt&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;re&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;file.txt&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;];                  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;&#x2F; &amp;quot;txt&amp;quot;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;re&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;file&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;];                      &lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;&#x2F; undefined
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;re&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;&amp;quot;&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;];                          &lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;&#x2F; undefined
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;re&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;];                        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;&#x2F; undefined
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;var &lt;&#x2F;span&gt;&lt;span&gt;ext &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;re&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;exec&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;undefined&lt;&#x2F;span&gt;&lt;span&gt;)[&lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;];                   &lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;&#x2F; undefined
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;&#x2F;**
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;(?:         # begin non-capturing group
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;  \.        #   a dot
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;  (         #   begin capturing group (captures the actual extension)
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;    [^.]+   #     anything except a dot, multiple times
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;  )         #   end capturing group
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;)?          # end non-capturing group, make it optional
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;$           # anchor to the end of the string
&lt;&#x2F;span&gt;&lt;span style=&quot;color:#676f7d;&quot;&gt;*&#x2F;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Override equals and hashCode correctly</title>
		<published>2022-03-31T00:00:00+00:00</published>
		<updated>2022-03-31T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/snippets/equals-hashcode/" type="text/html"/>
		<id>https://zyzle.dev/snippets/equals-hashcode/</id>
		<content type="html">&lt;p&gt;A Java classes &lt;code&gt;equals&lt;&#x2F;code&gt; and &lt;code&gt;hashCode&lt;&#x2F;code&gt; methods should always be overridden in pairs, the following shows how to do this manually without using 3rd party libraries&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;java&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-java &quot;&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;class &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;Stock &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span&gt;tickSize;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;long &lt;&#x2F;span&gt;&lt;span&gt;lotSize;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;boolean &lt;&#x2F;span&gt;&lt;span&gt;isRestricted;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span&gt;symbol;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;String &lt;&#x2F;span&gt;&lt;span&gt;exchange;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;Date &lt;&#x2F;span&gt;&lt;span&gt;settlementDate;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;private &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;BigDecimal &lt;&#x2F;span&gt;&lt;span&gt;price;
&lt;&#x2F;span&gt;&lt;span&gt;        
&lt;&#x2F;span&gt;&lt;span&gt;    @Override
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;int &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;hashCode&lt;&#x2F;span&gt;&lt;span&gt;() {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;final &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;31&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+&lt;&#x2F;span&gt;&lt;span&gt; tickSize;
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;int&lt;&#x2F;span&gt;&lt;span&gt;) (lotSize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;^ &lt;&#x2F;span&gt;&lt;span&gt;(lotSize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;32&lt;&#x2F;span&gt;&lt;span&gt;));
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;(isRestricted &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1231 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;: &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;1237&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;((symbol &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; symbol.hashCode());
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;((exchange &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; exchange.hashCode());
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;((settlementDate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; settlementDate.hashCode());
&lt;&#x2F;span&gt;&lt;span&gt;        result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;=&lt;&#x2F;span&gt;&lt;span&gt; prime &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;*&lt;&#x2F;span&gt;&lt;span&gt; result &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span&gt;((price &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null&lt;&#x2F;span&gt;&lt;span&gt;) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;? &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;:&lt;&#x2F;span&gt;&lt;span&gt; price.hashCode());
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;return&lt;&#x2F;span&gt;&lt;span&gt; result;
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    @Override
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;public &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;boolean &lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;equals&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;Object &lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt;obj&lt;&#x2F;span&gt;&lt;span&gt;) {
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this ==&lt;&#x2F;span&gt;&lt;span&gt; obj) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;true&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;if &lt;&#x2F;span&gt;&lt;span&gt;(obj &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;== &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;|| this&lt;&#x2F;span&gt;&lt;span&gt;.getClass() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;!=&lt;&#x2F;span&gt;&lt;span&gt; obj.getClass()){
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;return &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;false&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;Stock&lt;&#x2F;span&gt;&lt;span&gt; other &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;Stock&lt;&#x2F;span&gt;&lt;span&gt;) obj;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;return  
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.tickSize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.tickSize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; this&lt;&#x2F;span&gt;&lt;span&gt;.lotSize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.lotSize &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; 
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.isRestricted &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.isRestricted &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp;
&lt;&#x2F;span&gt;&lt;span&gt;            (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.symbol &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.symbol&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.symbol &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; this&lt;&#x2F;span&gt;&lt;span&gt;.symbol.equals(other.symbol))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; 
&lt;&#x2F;span&gt;&lt;span&gt;            (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.exchange &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.exchange&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.exchange &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; this&lt;&#x2F;span&gt;&lt;span&gt;.exchange.equals(other.exchange))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp;
&lt;&#x2F;span&gt;&lt;span&gt;            (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.settlementDate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.settlementDate&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.settlementDate &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; this&lt;&#x2F;span&gt;&lt;span&gt;.settlementDate.equals(other.settlementDate))) &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp;
&lt;&#x2F;span&gt;&lt;span&gt;            (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.price &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;==&lt;&#x2F;span&gt;&lt;span&gt; other.price&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;|| &lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;this&lt;&#x2F;span&gt;&lt;span&gt;.price &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;!= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;null &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&amp;amp;&amp;amp; this&lt;&#x2F;span&gt;&lt;span&gt;.price.equals(other.price)));
&lt;&#x2F;span&gt;&lt;span&gt;    }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;The Java &lt;code&gt;equals&lt;&#x2F;code&gt; contract defines that the method must be:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Reflexive&lt;&#x2F;strong&gt;: An object must equal itself&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Symetric&lt;&#x2F;strong&gt;: if &lt;code&gt;x.equals(y)&lt;&#x2F;code&gt; then &lt;code&gt;y.equals(x)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Transitive&lt;&#x2F;strong&gt;: if &lt;code&gt;x.equals(y)&lt;&#x2F;code&gt; and &lt;code&gt;y.equals(z)&lt;&#x2F;code&gt; then &lt;code&gt;x.equals(z)&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Consistent&lt;&#x2F;strong&gt;: The value should only change if a member used in the calculation changes i.e. no randomness.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;&lt;code&gt;hashCode&lt;&#x2F;code&gt; calculation is related to the &lt;code&gt;equals&lt;&#x2F;code&gt; method in the following ways&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Internal Consistency&lt;&#x2F;strong&gt;: The value can only change if a member used in the &lt;code&gt;equals&lt;&#x2F;code&gt; calculation changes&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Equals Consistency&lt;&#x2F;strong&gt;: If two objects are &lt;code&gt;equal&lt;&#x2F;code&gt; then they must have the same &lt;code&gt;hashCode&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;strong&gt;Collisions&lt;&#x2F;strong&gt;: unequal objects &lt;em&gt;may&lt;&#x2F;em&gt; have the same &lt;code&gt;hashCode&lt;&#x2F;code&gt;, nothing in the definition prohibits this&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Recursive find and remove</title>
		<published>2022-03-31T00:00:00+00:00</published>
		<updated>2022-03-31T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/snippets/find-remove/" type="text/html"/>
		<id>https://zyzle.dev/snippets/find-remove/</id>
		<content type="html">&lt;p&gt;Find all files&#x2F;directories based on a name pattern and remove them recursively from a base directory.&lt;&#x2F;p&gt;
&lt;p&gt;For files:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;find .&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;*.bak&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -type&lt;&#x2F;span&gt;&lt;span&gt; f&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -exec&lt;&#x2F;span&gt;&lt;span&gt; rm {} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;\;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;For directories:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;bash&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-bash &quot;&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span&gt;find .&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -name &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;quot;node_modules&amp;quot;&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -type&lt;&#x2F;span&gt;&lt;span&gt; d&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -exec&lt;&#x2F;span&gt;&lt;span&gt; rm&lt;&#x2F;span&gt;&lt;span style=&quot;font-style:italic;color:#d19a66;&quot;&gt; -rf &lt;&#x2F;span&gt;&lt;span&gt;{} &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;\;
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Fisher-Yates Shuffle</title>
		<published>2022-03-31T00:00:00+00:00</published>
		<updated>2022-03-31T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/snippets/fisher-yates/" type="text/html"/>
		<id>https://zyzle.dev/snippets/fisher-yates/</id>
		<content type="html">&lt;p&gt;Take a finite array and shuffle items in-place:&lt;&#x2F;p&gt;
&lt;pre data-lang=&quot;typescript&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-typescript &quot;&gt;&lt;code class=&quot;language-typescript&quot; data-lang=&quot;typescript&quot;&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;shuffle&lt;&#x2F;span&gt;&lt;span&gt;(cards: any[]) {
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;m &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;cards&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;length&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;let &lt;&#x2F;span&gt;&lt;span&gt;t, i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;0&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;  &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;while&lt;&#x2F;span&gt;&lt;span&gt;(m) {
&lt;&#x2F;span&gt;&lt;span&gt;    i &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;floor&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;Math&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;random&lt;&#x2F;span&gt;&lt;span&gt;() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span&gt;m&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;--&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    t &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;cards[m];
&lt;&#x2F;span&gt;&lt;span&gt;    cards[m] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;cards[i];
&lt;&#x2F;span&gt;&lt;span&gt;    cards[i] &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span&gt;t;
&lt;&#x2F;span&gt;&lt;span&gt;  }
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;p&gt;Formal definition:&lt;&#x2F;p&gt;
&lt;pre style=&quot;background-color:#282c34;color:#abb2bf;&quot;&gt;&lt;code&gt;&lt;span&gt;for i from n−1 downto 1 do
&lt;&#x2F;span&gt;&lt;span&gt;  j ← random integer such that 0 ≤ j ≤ i
&lt;&#x2F;span&gt;&lt;span&gt;  exchange a[j] and a[i]
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
	</entry>
	<entry xml:lang="en">
		<title>Markdown Tester Page</title>
		<published>2022-03-26T00:00:00+00:00</published>
		<updated>2022-03-26T00:00:00+00:00</updated>
		<link href="https://zyzle.dev/blog/markdown-test/" type="text/html"/>
		<id>https://zyzle.dev/blog/markdown-test/</id>
		<content type="html">&lt;p&gt;This page is going to function as a test bed for the sites new styling, it&#x27;s going to contain as many different markdown elements as possible in order to see whether or not we support them&lt;&#x2F;p&gt;
&lt;span id=&quot;continue-reading&quot;&gt;&lt;&#x2F;span&gt;&lt;h1 id=&quot;headings&quot;&gt;Headings&lt;&#x2F;h1&gt;
&lt;h1 id=&quot;heading-1&quot;&gt;Heading 1&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;heading-2&quot;&gt;Heading 2&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;heading-3&quot;&gt;Heading 3&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;heading-4&quot;&gt;Heading 4&lt;&#x2F;h4&gt;
&lt;h5 id=&quot;heading-5&quot;&gt;Heading 5&lt;&#x2F;h5&gt;
&lt;h6 id=&quot;heading-6&quot;&gt;Heading 6&lt;&#x2F;h6&gt;
&lt;h1 id=&quot;unordered-list&quot;&gt;Unordered List&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;one&lt;&#x2F;li&gt;
&lt;li&gt;two&lt;&#x2F;li&gt;
&lt;li&gt;three&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;ordered-list&quot;&gt;Ordered List&lt;&#x2F;h1&gt;
&lt;ol&gt;
&lt;li&gt;one&lt;&#x2F;li&gt;
&lt;li&gt;two&lt;&#x2F;li&gt;
&lt;li&gt;three&lt;&#x2F;li&gt;
&lt;&#x2F;ol&gt;
&lt;h1 id=&quot;blocks&quot;&gt;Blocks&lt;&#x2F;h1&gt;
&lt;blockquote&gt;
&lt;p&gt;some blockquote information text&lt;&#x2F;p&gt;
&lt;p&gt;over multiple lines in markdown&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre data-lang=&quot;js&quot; style=&quot;background-color:#282c34;color:#abb2bf;&quot; class=&quot;language-js &quot;&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span&gt;(() &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;bar &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;querySelector&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;#39;#progress-bar&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;post &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;querySelector&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;#39;#docmain&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;);
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;html &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;document&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;documentElement&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;const &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;height &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;post&lt;&#x2F;span&gt;&lt;span&gt;.scrollHeight;
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;    &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;window&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#98c379;&quot;&gt;addEventListener&lt;&#x2F;span&gt;&lt;span&gt;(&lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;#39;scroll&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;, () &lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;=&amp;gt; &lt;&#x2F;span&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;        &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;bar&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;style&lt;&#x2F;span&gt;&lt;span&gt;.&lt;&#x2F;span&gt;&lt;span style=&quot;color:#56b6c2;&quot;&gt;width &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;= 
&lt;&#x2F;span&gt;&lt;span&gt;            (&lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;.scrollTop &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;&#x2F; &lt;&#x2F;span&gt;&lt;span&gt;(height &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;- &lt;&#x2F;span&gt;&lt;span style=&quot;color:#61afef;&quot;&gt;html&lt;&#x2F;span&gt;&lt;span&gt;.clientHeight))
&lt;&#x2F;span&gt;&lt;span&gt;            &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;* &lt;&#x2F;span&gt;&lt;span style=&quot;color:#c678dd;&quot;&gt;100 &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e06c75;&quot;&gt;+ &lt;&#x2F;span&gt;&lt;span style=&quot;color:#e5c07b;&quot;&gt;&amp;#39;%&amp;#39;&lt;&#x2F;span&gt;&lt;span&gt;;
&lt;&#x2F;span&gt;&lt;span&gt;    });
&lt;&#x2F;span&gt;&lt;span&gt;})();
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
&lt;h1 id=&quot;text&quot;&gt;Text&lt;&#x2F;h1&gt;
&lt;p&gt;Some text with &lt;em&gt;italic&lt;&#x2F;em&gt;, &lt;strong&gt;bold&lt;&#x2F;strong&gt;, &lt;em&gt;&lt;strong&gt;bold italic&lt;&#x2F;strong&gt;&lt;&#x2F;em&gt;, &lt;code&gt;monospaced&lt;&#x2F;code&gt;, &lt;a href=&quot;http:&#x2F;&#x2F;www.zyzle.dev&quot;&gt;a link&lt;&#x2F;a&gt;, &lt;del&gt;strike&lt;&#x2F;del&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;image&quot;&gt;Image&lt;&#x2F;h1&gt;
&lt;p&gt;a basic image&lt;&#x2F;p&gt;
&lt;p&gt;&lt;img src=&quot;bg2.jpg&quot; alt=&quot;a caption for image&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;p&gt;one using our &lt;code&gt;figure&lt;&#x2F;code&gt; custom shortcode&lt;&#x2F;p&gt;
&lt;figure&gt;
    
    
        
    
    &lt;img src=&quot;https:&amp;#x2F;&amp;#x2F;zyzle.dev&amp;#x2F;processed_images&amp;#x2F;a74de0c7255ee7d700.webp&quot; alt=&quot;test image&quot; &#x2F;&gt;
    &lt;figcaption&gt;a caption for the image&lt;&#x2F;figcaption&gt;
&lt;&#x2F;figure&gt;</content>
	</entry>
</feed>
